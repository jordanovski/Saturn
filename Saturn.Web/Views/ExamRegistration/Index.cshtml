@model IEnumerable<Saturn.Model.Views.ViewExamRegistration>

@{
    ViewBag.Title = "Закажани испити";
}

<h3>@ViewBag.Title</h3>

@(Html.Kendo().Grid(Model)
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.ExamType).Filterable(filterable => filterable
            .UI("examTypeFilter")
            .Extra(false)
            .Operators(operators => operators.ForString(str => str.Clear().IsEqualTo("Еднакво на").IsNotEqualTo("Различно од")))
        ).Title("Тип").Width(160);
        columns.Bound(p => p.ExamCenter).Filterable(filterable => filterable
            .UI("examCenterFilter")
            .Extra(false)
            .Operators(operators => operators.ForString(str => str.Clear().IsEqualTo("Еднакво на").IsNotEqualTo("Различно од")))
        ).Title("Испитен центар").Width(120);
        columns.Bound(p => p.ExamDateTime).Format("{0:dd.MM.yyyy}").Title("Датум").Width(80);
        columns.Bound(p => p.ExamDateTime).Format("{0:HH:mm}").Title("Време").Width(70);
        columns.Bound(p => p.CandidateFirstName).Title("Име");
        columns.Bound(p => p.CandidateLastName).Title("Презиме");
        columns.Bound(p => p.ExamRegistrationStatus).Filterable(filterable => filterable
            .UI("statusFilter")
            .Extra(false)
            .Operators(operators => operators.ForString(str => str.Clear().IsEqualTo("Еднакво на").IsNotEqualTo("Различно од")))
        ).Title("Статус").Width(100);
        columns.Bound(p => p.DrivingSchoolName).Title("Авто школа").Width(100);
        //columns.Bound(p => p.ExamRegistrationDate).Format("{0:dd.MM.yyyy}").Width(80);
        //columns.Bound(p => p.ExamRegistrationPlace);
        //columns.Bound(p => p.ExamRegistrationPrice).Width(60);

        

        columns.Template(@<text></text>).ClientTemplate("<a href='" + Url.Action("Create", "AssessmentSheet") + "/#= ExamRegistrationId #'" + ">Оцен. лист</a>").Width(100);
    })
    .Pageable()
    .Sortable()
    .Filterable()
    .Reorderable(o => o.Columns(true))
    .Resizable(r => r.Columns(true))
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(15)
        .Read(read => read.Action("Read", "ExamRegistration"))
    )
)

<script>
    function examTypeFilter(element) {
        element.kendoDropDownList({
            dataSource: {
                transport: {
                    read: "@Url.Action("FilterMenuCustomization_ExamType")"
                }
            },
            optionLabel: "--Одбери вредност--"
        });
    };
    function examCenterFilter(element) {
        element.kendoDropDownList({
            dataSource: {
                transport: {
                    read: "@Url.Action("FilterMenuCustomization_ExamCenter")"
                }
            },
            optionLabel: "--Одбери вредност--"
        });
    };
    function statusFilter(element) {
        element.kendoDropDownList({
            dataSource: {
                transport: {
                    read: "@Url.Action("FilterMenuCustomization_Status")"
                }
            },
            optionLabel: "--Одбери вредност--"
        });
    }
</script>